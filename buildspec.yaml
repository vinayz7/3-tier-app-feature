version: 0.2

env:
  variables:
    ACCOUNT_ID: 619071307284
    REGION: us-east-1
    # REPO_NAME: final
    # IMAGE_TAG: app
    # IMAGE_URI: 619071307284.dkr.ecr.us-east-1.amazonaws.com/final:app
    IMAGE_REPO: final

phases:
  install:
    runtime-versions:
      java: corretto17
    commands:
      - echo Installing Maven and Docker...
      - yum install -y maven docker
      - export IMAGE_TAG=v1.${CODEBUILD_BUILD_NUMBER}

  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $REGION | docker login --username AWS --password-stdin $ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com

  build:
    commands:
      - echo Navigating to app directory...
      - cd app-tier
      - echo Building JAR with Maven...
      - mvn clean package -DskipTests
      - echo Running SonarQube analysis...
      - mvn clean verify sonar:sonar -Dsonar.projectKey=capastone_3tier -Dsonar.host.url=http://3.86.252.15 -Dsonar.login=sqp_427fbc0390c05c889ced481b0b67e1bda52398a8
      # - echo Building Docker image...
      # - docker build -t $REPO_NAME:$IMAGE_TAG .
      # - docker tag $REPO_NAME:$IMAGE_TAG $IMAGE_URI
      # - cd ..
      - docker build -t "${IMAGE_REPO}:${IMAGE_TAG}" .

      - docker tag "${IMAGE_REPO}:${IMAGE_TAG}" "${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/${IMAGE_REPO}:${IMAGE_TAG}"

      - cd -
 

  post_build:
    commands:
      - echo Pushing Docker image to Amazon ECR...
      - docker push $IMAGE_URI
      - echo Preparing Kubernetes manifests...
      - mkdir -p k8s-out
      - sed "s|image_url|${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/${IMAGE_REPO}:${IMAGE_TAG}|g" k8s/deployment.yaml > k8s-out/deployment.yaml
      - cp k8s/service.yaml k8s-out/service.yaml
      - echo Build and deployment artifacts ready.
      
artifacts:
  base-directory: k8s-out
  files:
    - deployment.yaml
    - service.yaml
